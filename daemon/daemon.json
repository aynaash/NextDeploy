{
  "daemon_config": {
    "description": "Main daemon configuration file: /etc/nextdeployd/config.json",
    "config": {
      "socket_path": "/var/run/nextdeployd.sock",
      "socket_mode": "0660",
      "docker_socket": "/var/run/docker.sock",
      "container_prefix": "nextdeploy-",
      "log_level": "info",
      "allowed_users": ["root", "deploy", "docker", "nextdeploy"],
      "max_concurrent_operations": 5,
      "operation_timeout": "300s",
      "health_check_interval": "30s",
      "cleanup_interval": "1h",
      "backup_retention_days": 7,
      "allowed_registries": [
        "docker.io",
        "registry.company.com",
        "quay.io",
        "ghcr.io"
      ],
      "resource_limits": {
        "max_containers": 100,
        "max_memory": "80%",
        "max_cpu": "90%"
      },
      "security": {
        "enable_auth": true,
        "auth_token": "your-secure-token-here",
        "rate_limit_per_minute": 60,
        "allowed_commands": [
          "listcontainers",
          "deploy",
          "start",
          "stop",
          "restart",
          "logs",
          "status",
          "health",
          "swapcontainers",
          "rollback",
          "pull",
          "inspect"
        ]
      }
    }
  },

  "container_templates": {
    "description": "Container deployment templates: /etc/nextdeployd/templates.json",
    "templates": {
      "web-server": {
        "image": "nginx:latest",
        "ports": ["80:8080", "443:8443"],
        "environment": [
          "NGINX_HOST=localhost",
          "NGINX_PORT=80"
        ],
        "volumes": [
          "/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro",
          "/var/log/nginx:/var/log/nginx",
          "/var/www/html:/usr/share/nginx/html:ro"
        ],
        "restart": "unless-stopped",
        "memory": "512m",
        "cpu": "0.5",
        "labels": {
          "app": "web-server",
          "tier": "frontend",
          "managed-by": "nextdeployd"
        },
        "health_check": {
          "test": ["CMD", "curl", "-f", "http://localhost/health"],
          "interval": "30s",
          "timeout": "10s",
          "retries": 3
        }
      },
      
      "database": {
        "image": "postgres:15",
        "ports": ["5432:5432"],
        "environment": [
          "POSTGRES_DB=app_production",
          "POSTGRES_USER=app_user",
          "POSTGRES_PASSWORD=${DB_PASSWORD}",
          "POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256"
        ],
        "volumes": [
          "/var/lib/postgresql/data:/var/lib/postgresql/data",
          "/etc/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf:ro",
          "/var/log/postgresql:/var/log/postgresql"
        ],
        "restart": "always",
        "memory": "2g",
        "cpu": "1.0",
        "labels": {
          "app": "database",
          "tier": "backend",
          "managed-by": "nextdeployd",
          "backup": "daily"
        },
        "health_check": {
          "test": ["CMD-SHELL", "pg_isready -U app_user -d app_production"],
          "interval": "10s",
          "timeout": "5s",
          "retries": 5
        }
      },

      "redis-cache": {
        "image": "redis:7-alpine",
        "ports": ["6379:6379"],
        "environment": [
          "REDIS_PASSWORD=${REDIS_PASSWORD}"
        ],
        "volumes": [
          "/var/lib/redis:/data",
          "/etc/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro"
        ],
        "restart": "unless-stopped",
        "memory": "1g",
        "cpu": "0.5",
        "labels": {
          "app": "redis",
          "tier": "cache",
          "managed-by": "nextdeployd"
        },
        "health_check": {
          "test": ["CMD", "redis-cli", "ping"],
          "interval": "30s",
          "timeout": "3s",
          "retries": 3
        }
      },

      "app-server": {
        "image": "mycompany/app:${VERSION}",
        "ports": ["3000:3000"],
        "environment": [
          "NODE_ENV=production",
          "DATABASE_URL=postgresql://app_user:${DB_PASSWORD}@database:5432/app_production",
          "REDIS_URL=redis://:${REDIS_PASSWORD}@redis-cache:6379",
          "JWT_SECRET=${JWT_SECRET}",
          "API_KEY=${API_KEY}",
          "LOG_LEVEL=info"
        ],
        "volumes": [
          "/var/log/app:/app/logs",
          "/etc/app/config.json:/app/config.json:ro"
        ],
        "depends_on": ["database", "redis-cache"],
        "restart": "unless-stopped",
        "memory": "1g",
        "cpu": "1.0",
        "labels": {
          "app": "app-server",
          "tier": "application",
          "managed-by": "nextdeployd",
          "version": "${VERSION}"
        },
        "health_check": {
          "test": ["CMD", "curl", "-f", "http://localhost:3000/api/health"],
          "interval": "30s",
          "timeout": "10s",
          "retries": 3
        }
      }
    }
  },

  "deployment_environments": {
    "description": "Environment-specific configurations: /etc/nextdeployd/environments/",
    "production": {
      "name": "production",
      "domain": "app.company.com",
      "containers": {
        "web-server": {
          "replicas": 2,
          "template": "web-server",
          "overrides": {
            "memory": "1g",
            "cpu": "1.0"
          }
        },
        "app-server": {
          "replicas": 3,
          "template": "app-server",
          "overrides": {
            "environment": [
              "NODE_ENV=production",
              "DATABASE_URL=postgresql://app_user:${DB_PASSWORD}@prod-db.company.com:5432/app_production"
            ]
          }
        },
        "database": {
          "replicas": 1,
          "template": "database",
          "overrides": {
            "memory": "4g",
            "cpu": "2.0",
            "volumes": [
              "/mnt/db-storage/postgresql:/var/lib/postgresql/data"
            ]
          }
        }
      },
      "secrets": {
        "DB_PASSWORD": "/run/secrets/db_password",
        "REDIS_PASSWORD": "/run/secrets/redis_password",
        "JWT_SECRET": "/run/secrets/jwt_secret",
        "API_KEY": "/run/secrets/api_key"
      }
    },

    "staging": {
      "name": "staging",
      "domain": "staging.company.com",
      "containers": {
        "web-server": {
          "replicas": 1,
          "template": "web-server",
          "overrides": {
            "ports": ["8080:8080"]
          }
        },
        "app-server": {
          "replicas": 1,
          "template": "app-server",
          "overrides": {
            "environment": [
              "NODE_ENV=staging",
              "LOG_LEVEL=debug"
            ]
          }
        },
        "database": {
          "replicas": 1,
          "template": "database",
          "overrides": {
            "memory": "1g"
          }
        }
      }
    }
  },

  "command_examples": {
    "description": "Sample command payloads sent to daemon",
    "deploy_command": {
      "type": "deploy",
      "args": {
        "image": "nginx:1.21",
        "name": "web-server-v2",
        "ports": ["80:8080", "443:8443"],
        "env": [
          "NGINX_HOST=myapp.com",
          "NGINX_PORT=80"
        ],
        "volumes": [
          "/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro",
          "/var/www/html:/usr/share/nginx/html:ro"
        ],
        "restart": "unless-stopped",
        "memory": "512m",
        "labels": {
          "app": "web-server",
          "version": "v2.0",
          "environment": "production"
        }
      }
    },

    "swap_containers_command": {
      "type": "swapcontainers",
      "args": {
        "from": "web-server-v1",
        "to": "web-server-v2",
        "health_check": true,
        "rollback_on_failure": true
      }
    },

    "logs_command": {
      "type": "logs",
      "args": {
        "container": "app-server-1",
        "lines": 500,
        "since": "2024-01-15T10:00:00Z",
        "follow": false,
        "timestamps": true
      }
    },

    "health_check_command": {
      "type": "health",
      "args": {
        "container": "database-primary",
        "timeout": "30s",
        "detailed": true
      }
    },

    "rollback_command": {
      "type": "rollback",
      "args": {
        "container": "app-server",
        "to_version": "v1.2.3",
        "preserve_data": true
      }
    }
  },

  "response_examples": {
    "description": "Sample responses from daemon",
    "successful_deploy": {
      "success": true,
      "message": "Successfully deployed container web-server-v2",
      "data": {
        "container_id": "a1b2c3d4e5f6",
        "container_name": "web-server-v2",
        "image": "nginx:1.21",
        "status": "running",
        "ports": {
          "80": "8080",
          "443": "8443"
        },
        "created_at": "2024-01-15T14:30:00Z",
        "health_status": "healthy"
      }
    },

    "container_list": {
      "success": true,
      "message": "Found 5 containers",
      "data": [
        {
          "id": "a1b2c3d4e5f6",
          "name": "web-server-v2",
          "image": "nginx:1.21",
          "status": "running",
          "ports": "80:8080,443:8443",
          "created": "2024-01-15 14:30:00"
        },
        {
          "id": "b2c3d4e5f6a1",
          "name": "app-server-1",
          "image": "mycompany/app:v2.1.0",
          "status": "running",
          "ports": "3000:3000",
          "created": "2024-01-15 14:25:00"
        },
        {
          "id": "c3d4e5f6a1b2",
          "name": "database-primary",
          "image": "postgres:15",
          "status": "running",
          "ports": "5432:5432",
          "created": "2024-01-15 14:20:00"
        }
      ]
    },

    "status_response": {
      "success": true,
      "message": "Daemon status retrieved",
      "data": {
        "daemon_status": "healthy",
        "docker_accessible": true,
        "containers_running": 8,
        "containers_total": 12,
        "socket_path": "/var/run/nextdeployd.sock",
        "uptime": "72h15m30s",
        "memory_usage": "65%",
        "disk_usage": "45%",
        "last_operation": "2024-01-15T16:45:22Z",
        "operations_today": 127,
        "docker_version": "24.0.7",
        "daemon_version": "v1.0.0"
      }
    },

    "error_response": {
      "success": false,
      "message": "Failed to deploy container: image not found",
      "error": {
        "code": "IMAGE_NOT_FOUND",
        "details": "Unable to pull image 'nonexistent/image:latest' from registry",
        "timestamp": "2024-01-15T16:50:15Z",
        "retry_after": 300
      }
    }
  },

  "monitoring_data": {
    "description": "Sample monitoring/metrics data",
    "container_metrics": {
      "web-server-v2": {
        "cpu_usage": "15.2%",
        "memory_usage": "256MB",
        "memory_limit": "512MB",
        "network_io": {
          "rx_bytes": "1.2GB",
          "tx_bytes": "2.8GB"
        },
        "disk_io": {
          "read_bytes": "45MB",
          "write_bytes": "12MB"
        },
        "uptime": "48h12m",
        "restart_count": 0,
        "last_health_check": "2024-01-15T16:55:00Z",
        "health_status": "healthy"
      }
    },

    "system_metrics": {
      "timestamp": "2024-01-15T17:00:00Z",
      "host": {
        "cpu_usage": "35%",
        "memory_total": "16GB",
        "memory_used": "8.5GB",
        "disk_usage": "45%",
        "load_average": [1.2, 1.5, 1.8],
        "uptime": "15 days"
      },
      "docker": {
        "version": "24.0.7",
        "containers": 12,
        "images": 8,
        "volumes": 15,
        "networks": 3
      }
    }
  },

  "secrets_management": {
    "description": "External secrets configuration",
    "vault_config": {
      "address": "https://vault.company.com:8200",
      "auth_method": "kubernetes",
      "role": "nextdeployd",
      "secrets_path": "secret/nextdeploy/"
    },
    
    "docker_secrets": {
      "db_password": {
        "external": true,
        "name": "production_db_password"
      },
      "api_key": {
        "external": true,
        "name": "production_api_key"
      }
    }
  }
}
