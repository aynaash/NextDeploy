
# .github/workflows/ci.yml
name: NextDeploy CI/CD

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ "1.22.x" ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod tidy

      - name: Lint
        run: go vet ./...

      - name: Run tests
        run: go test ./... -v

      - name: Build CLI (nextdeploy)
        run: |
          go build -o bin/nextdeploy ./cli

      - name: Build Daemon (nextdeployd)
        run: |
          go build -o bin/nextdeployd ./daemon

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextdeploy-${{ matrix.os }}
          path: bin/

  release:
    name: Release Binaries
    needs: build-test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"

      - name: Build release binaries
        run: |
          mkdir -p dist
          GOOS=linux   GOARCH=amd64 go build -o dist/nextdeploy-linux-amd64 ./cli
          GOOS=linux   GOARCH=amd64 go build -o dist/nextdeployd-linux-amd64 ./daemon

          GOOS=darwin  GOARCH=amd64 go build -o dist/nextdeploy-darwin-amd64 ./cli
          GOOS=darwin  GOARCH=amd64 go build -o dist/nextdeployd-darwin-amd64 ./daemon

          GOOS=windows GOARCH=amd64 go build -o dist/nextdeploy-windows-amd64.exe ./cli
          GOOS=windows GOARCH=amd64 go build -o dist/nextdeployd-windows-amd64.exe ./daemon

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
